1.iloc:
dataset = pd.read_csv(Data.csv)
# X 获取所有行从第0列到倒数第1列的数据（从0起算）
X = dataset.iloc[ : ,:-1].values
# Y 获取所有行第3列的数据
Y = dataset.iloc[ : , 3].values
iloc 的作用是通过行列号来获取数据，而 loc 则是通过标签索引数据

2.Imputer:
填补缺失值：sklearn.preprocessing.Imputer(missing_values=’NaN’, strategy=’mean’, axis=0, verbose=0, copy=True)

主要参数说明：

missing_values：缺失值，可以为整数或NaN(缺失值numpy.nan用字符串‘NaN’表示)，默认为NaN

strategy：替换策略，字符串，默认用均值‘mean’替换

①若为mean时，用特征列的均值替换

②若为median时，用特征列的中位数替换

③若为most_frequent时，用特征列的众数替换

axis：指定轴数，默认axis=0代表列，axis=1代表行

copy：设置为True代表不在原数据集上修改，设置为False时，就地修改，存在如下情况时，即使设置为False时，也不会就地修改

①X不是浮点值数组

②X是稀疏且missing_values=0

③axis=0且X为CRS矩阵

④axis=1且X为CSC矩阵

3.KNN(KNeighborsClassifier)k近邻算法
K最近邻(k-Nearest Neighbor，KNN)分类算法的核心思想是如果一个样本在特征空间中的k个最相似(即特征空间中最邻近)的样本中的大多数属于某一个类别，则该样本也属于这个类别。

4.DataFrame
DataFrame是Python中Pandas库中的一种数据结构，它类似excel，是一种二维表。
pandas.DataFrame( data, index, columns, dtype, copy)
 

data表示要传入的数据 ，包括 ndarray，series，map，lists，dict，constant和另一个DataFrame

index和columns 行索引和列索引  格式['x1','x2']

dtype:每列的类型

copy: 查了api，才知道意思是从input输入中拷贝数据。默认是false，不拷贝

5.\r   \n   \r\n
\r:回到本行行首
\n:换行
\r\n：Enter

6.pd.read_csv()参数
filepath_or_buffer：读取的对象，是一个字符串，该字符串可以是URL，包括http，ftp，本地文件
sep：分隔符，默认是‘,’，CSV文件的分隔符
delimiter：sep的替代参数，默认为None
header：列名，int或int列表，默认是infer，即默认第一行为列名
names：要使用的列名(columns)，array-like，默认是None，当读取的CSV文件没有列名时，可以通过names参数指定
index_col：要是用的行名(index)，int或sequence或False，默认为None，即默认添加从0开始的index

7.pandas的reset_index()
This is useful when the index needs to be treated as a column, or when the index is meaningless and needs to be reset to the default before another operation.
当索引需要作为列处理时，或者当索引没有意义并且需要在另一个操作之前重置为默认值时，这是非常有用的。

8.scipy.misc作用
SciPy 中包含一些用于输入和输出的实用模块。下面介绍其中两个模块：io 和misc。
以图像形式保存数组
因为我们需要对图像进行操作，并且需要使用数组对象来做运算，所以将数组直接保存为图像文件1 非常有用。

9.from scipy.misc import imread
imread()以数组的形式读取图片

10.image_colors = ImageColorGenerator(alice_coloring)
以背景图片作为颜色填充

11.plt.axis("off")
off:表示关闭轴线和标签

